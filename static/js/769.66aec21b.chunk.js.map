{"version":3,"file":"static/js/769.66aec21b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Phonebook.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContactFormStyle = styled.form`\n    max-width: 180px;\n    margin: 0 auto;\n    padding: ${p => p.theme.space[5]}px;\n    border: ${p => `${p.theme.borders.normal} ${p.theme.colors.almostDarkGreen}`};\n    border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const LabelForm = styled.label`\n    font-weight: ${p => p.theme.fontWeights.medium};\n    font-size: ${p => p.theme.fontSizes.m};\n    color: ${p => p.theme.colors.almostDarkGreen};\n`;\n\nexport const InputForm = styled.input`\n    margin-top: ${p => p.theme.space[2]}px;\n    outline: none;\n    border: ${p => `${p.theme.borders.normal} ${p.theme.colors.almostDarkGreen}`};\n    border-radius: ${p => p.theme.radii.sm};\n    &:first-child {\n        margin-bottom: ${p => p.theme.space[4]}px;\n    }\n`;\n\nexport const ButtonForAdd = styled.button`\n    display: block;\n\tmargin: 0 auto;\n    padding: ${p => p.theme.space[3]}px;\n    border: ${p => `${p.theme.borders.normal} ${p.theme.colors.almostDarkGreen}`};\n    border-radius: ${p => p.theme.radii.sm};\n    box-shadow: ${p => p.theme.shadows.shadow};\n    cursor: pointer;\n    color: ${p => p.theme.colors.maybeYellow};\n    background-color: ${p => p.theme.colors.almostDarkGreen};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n        transform: scale(1.15);\n        color: ${p => p.theme.colors.almostDarkGreen};\n        background-color: ${p => p.theme.colors.maybeYellow};\n    }\n`;","import React, { useState } from \"react\";\nimport { ContactFormStyle, LabelForm, InputForm, ButtonForAdd } from \"components/ContactForm/ContactForm.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from \"redux/selector\";\nimport { addNewContact } from \"redux/operations/contactsOperations\";\nimport { toastWarn } from \"components/services/toasts\";\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    \n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n    \n    const onSubmitForm = (event) => {\n        event.preventDefault();\n        const checkContact = contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase());\n        if (checkContact === true) {\n            reset();\n            return toastWarn(name);\n        };\n        const newContact = {\n            name,\n            number,\n        };\n        dispatch(addNewContact(newContact));\n        reset();\n    };\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n    \n    return (\n        <ContactFormStyle onSubmit={onSubmitForm}>\n            <LabelForm>Name\n                <InputForm\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={(event) => setName(event.target.value)}\n                />\n            </LabelForm>\n            <LabelForm>Number\n                <InputForm\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                value={number}\n                onChange={(event) => setNumber(event.target.value)}\n                />\n            </LabelForm>\n            <ButtonForAdd type=\"submit\">Add contact</ButtonForAdd>\n        </ContactFormStyle>\n    );\n};","import styled from \"styled-components\";\n\nexport const ContactListStyle = styled.ul`\n    margin-top: ${p => p.theme.space[4]}px;\n`;\n\nexport const ContactItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    &:not(:last-child) {\n        margin-bottom: 10px;\n    }\n`;\n\nexport const ButtonForDelete = styled.button`\n    padding: ${p => p.theme.space[2]}px;\n    border: ${p => `${p.theme.borders.normal} ${p.theme.colors.almostDarkGreen}`};\n    border-radius: ${p => p.theme.radii.sm};\n    box-shadow: ${p => p.theme.shadows.shadow};\n    cursor: pointer;\n    color: ${p => p.theme.colors.maybeYellow};\n    background-color: ${p => p.theme.colors.almostDarkGreen};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n        transform: scale(1.15);\n        color: ${p => p.theme.colors.almostDarkGreen};\n        background-color: ${p => p.theme.colors.maybeYellow};\n    }\n`;","import PropTypes from 'prop-types';\nimport { ButtonForDelete } from \"components/ContactList/ContactList.styled\";\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations/contactsOperations';\n\nexport const ContactItemEntrails = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <p>{name}: {number}</p>\n            <ButtonForDelete type=\"button\" onClick={() => dispatch(deleteContact(id))}>Delete</ButtonForDelete>\n        </>\n    );\n};\n\nContactItemEntrails.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};","import { ContactItemEntrails } from 'components/ContactList/ContactListItem';\nimport { ContactListStyle, ContactItem } from \"components/ContactList/ContactList.styled\";\nimport { selectFilteredContacts, selectAuth } from 'redux/selector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations/contactsOperations';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const { isLoggedIn } = useSelector(selectAuth);\n    const filteredContacts = useSelector(selectFilteredContacts);\n    \n    useEffect(() => {\n        if (isLoggedIn === true) {\n            dispatch(fetchContacts());\n        };\n    }, [isLoggedIn, dispatch]);\n\n    return (\n        <ContactListStyle>\n            {filteredContacts.map(({id, name, number}) => {\n                return (\n                    <ContactItem key={id}>\n                        <ContactItemEntrails id={id} name={name} number={number} />\n                    </ContactItem>\n                );\n            })}\n        </ContactListStyle>\n    );\n};","import styled from \"styled-components\";\n\nexport const LabelFilter = styled.label`\n    display: block;\n    margin: 0 auto;\n    text-align: center;\n    font-weight: ${p => p.theme.fontWeights.medium};\n    font-size: ${p => p.theme.fontSizes.m};\n    color: ${p => p.theme.colors.almostDarkGreen};\n`;\n\nexport const InputFilter = styled.input`\n    display: block;\n    margin-top: ${p => p.theme.space[2]}px;\n    margin-right: auto;\n    margin-left: auto;\n    outline: none;\n    border: ${p => `${p.theme.borders.normal} ${p.theme.colors.almostDarkGreen}`};\n    border-radius: ${p => p.theme.radii.sm};\n`;","import { LabelFilter, InputFilter } from \"components/Filter/Filter.styled\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selector';\nimport { setFilter } from \"redux/slices/contactsSlice\";\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <LabelFilter>Find contacts by name\n            <InputFilter\n                type=\"text\"\n                name=\"filter\"\n                title=\"The ability to filter the contact book\"\n                required\n                value={filter}\n                onChange={(event) => dispatch(setFilter(event.target.value))}\n            />\n        </LabelFilter>\n    );\n};","import { Box } from \"components/Box\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loading } from \"components/Loading\";\nimport { MainTitle, ContactsTitle, } from \"components/GlobalStyles\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading } from \"redux/selector\";\n\nexport const Phonebook = () => {\n    const loading = useSelector(selectIsLoading);\n\n    return (\n        <>\n            <Box as=\"section\" mb={5}>\n                <MainTitle>Phonebook</MainTitle>\n                <ContactForm />\n            </Box>\n            <Box as=\"section\">\n                <ContactsTitle>Contacts</ContactsTitle>\n                    <Filter />\n                    {loading === true && <Loading />}\n                    <ContactList />\n                {/* : loading === true\n        ? <Loading />\n        : <WarningMessage>Looks like you don`t have any contacts yet or just clear them all. Please add new contact🤔</WarningMessage>} */}\n            </Box>\n        </>\n    );\n};"],"names":["ContactFormStyle","styled","p","theme","space","borders","normal","colors","almostDarkGreen","radii","sm","LabelForm","fontWeights","medium","fontSizes","m","InputForm","ButtonForAdd","shadows","shadow","maybeYellow","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","reset","onSubmit","event","preventDefault","some","contact","toLowerCase","toastWarn","newContact","addNewContact","type","pattern","title","required","value","onChange","target","ContactListStyle","ContactItem","ButtonForDelete","ContactItemEntrails","id","onClick","deleteContact","ContactList","isLoggedIn","selectAuth","filteredContacts","selectFilteredContacts","useEffect","fetchContacts","map","LabelFilter","InputFilter","Filter","filter","selectFilter","setFilter","Phonebook","loading","selectIsLoading","Box","as","mb","Loading"],"sourceRoot":""}